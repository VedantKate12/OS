#include <stdio.h>
#include <stdlib.h>

int findClosest(int head, int requests[], int n, int served[]) {
    int minDistance = 10000, index = -1;
    for (int i = 0; i < n; i++) {
        if (!served[i] && abs(head - requests[i]) < minDistance) {
            minDistance = abs(head - requests[i]);
            index = i;
        }
    }
    return index;
}

void printTable(int requests[], int n, int seekTimes[]) {
    printf("Request\tSeek Time\n");
    printf("-------\t---------\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\n", requests[i], seekTimes[i]);
    }
}

int main() {
    int n, head, totalSeekTime = 0;

    printf("Enter number of requests: ");
    scanf("%d", &n);
    int requests[n], seekTimes[n], served[n];

    printf("Enter request sequence:\n");
    for (int i = 0; i < n; i++) {
        scanf("%d", &requests[i]);
        served[i] = 0;
    }

    printf("Enter initial head position: ");
    scanf("%d", &head);

    for (int i = 0; i < n; i++) {
        int index = findClosest(head, requests, n, served);
        seekTimes[i] = abs(requests[index] - head);
        totalSeekTime += seekTimes[i];
        head = requests[index];
        served[index] = 1;
    }

    printf("\nSSTF Disk Scheduling:\n");
    printTable(requests, n, seekTimes);
    printf("Total Seek Time: %d\n", totalSeekTime);

    return 0;
}
